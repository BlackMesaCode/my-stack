@using BlackMesa.MyStack.Main.Resources
@using BlackMesa.MyStack.Main.Utilities

@model BlackMesa.MyStack.Main.ViewModels.Test.SetupTestViewModel

@{
    ViewBag.Title = Strings.SetupTest;
}

<div id="content">

    <section id="test-setup">

        @if (Model.NumberOfSelectedCards > 0)
        {

            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="tile gray-darker">
                    <h1>@ViewBag.Title</h1>
                </div>

                if (!ViewData.ModelState.IsValid)
                {
                    <div class="tile gray-light">
                        @Html.ValidationSummary()
                    </div>
                }


                @Html.HiddenFor(model => model.FolderId)
                @Html.HiddenFor(model => model.ReturnToDetailsView)

                <div class="tile gray-dark">
                    <h3>@Strings.General</h3>
                </div>

                <div class="tile-splitter">
                    <label class="tile gray-light-hover" for="_TestOnlyDueCards">
                        @Html.CheckBoxFor(model => model.TestOnlyDueCards, new { @id = "_TestOnlyDueCards" }) @Strings.TestOnlyDueCards
                    </label>

                    <a class="tile gray-light-hover" href="@Url.Action("Leitner", "Help", new { folderId = Model.FolderId })" title="@Strings.NumberOfDueCards">
                        <i class="icons-question without-margin-right"></i>
                    </a>
                </div>




                <label class="tile gray-light-hover" for="_ReverseSides">
                    @Html.CheckBoxFor(model => model.ReverseSides, new { @id = "_ReverseSides" }) @Strings.ReverseSides
                </label>


                <div class="tile gray-dark">
                    <h3>@Html.LabelFor(model => Model.OrderType)</h3>
                </div>


                @Html.RadioButtonForEnum(model => model.OrderType)

                <div class="tile-splitter">
                    <div class="tile gray-dark">
                        <h3>@Html.LabelFor(model => Model.TestType)</h3>
                    </div>

                    <a class="tile gray-dark-hover" href="@Url.Action("TestTypes", "Help", new { folderId = Model.FolderId })" title="@Strings.NumberOfDueCards">
                        <i class="icons-question without-margin-right"></i>
                    </a>
                </div>

                @Html.RadioButtonForEnum(model => model.TestType)

                <div class="form-element-container">
                    <button class="gray-dark-hover" type="submit">
                        @Strings.StartTest
                    </button>
                </div>
            }

        }
        else
        {
            <div class="tile gray-darker">
                <h1>@ViewBag.Title</h1>
            </div>

            <div class="tile gray-light">
                @Strings.NoCardsFound @Strings.AddCardsFirst
            </div>

            <div class="form-element-container">
                <a class="button-like gray-dark-hover" href="@Url.Action("AddOptions", "Folder", new { folderId = Model.FolderId })">
                    <i class="icon-plus"></i>@Strings.Insert
                </a>
            </div>

        }
    </section>



</div>



@* ------------------- Menu ------------------- *@

<nav id="menu">


    @if (Model.ReturnToDetailsView)
    {
        <a class="red-hover" href="@Url.Action("Details", "Folder", new { id = Model.FolderId })" title="@Strings.Back">
            <i class="icon-back"></i>
        </a>
    }
    else
    {
        <a class="red-hover" href="@Url.Action("Options", "Selection", new { id = Model.FolderId })" title="@Strings.Back">
            <i class="icon-back"></i>
        </a>
    }


</nav>

